# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: sankethg2000
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: realtime-chat-app
# "service" is the name of this project. This will also be added to your AWS resource names.
service: auth-service

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  environment:
    USER_POOL_ID: !Ref CognitoUserPool
    CLIENT_ID: !Ref CognitoUserPoolClient

resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ChatAppUserPool
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireUppercase: true
            RequireNumbers: true
            RequireSymbols: true
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ChatAppClient
        UserPoolId: !Ref CognitoUserPool
        GenerateSecret: false
        ExplicitAuthFlows:
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH

functions:
  signup:
    handler: handler.signup
    events:
      - http:
          path: signup
          method: post
          cors: true
  login:
    handler: handler.login
    events:
      - http:
          path: login
          method: post
          cors: true
  validateToken:
    handler: handler.validateToken
    events: 
      - http:
          path: validate-login
          method: post
          cors: true
